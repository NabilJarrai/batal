services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: batal_db
      POSTGRES_USER: batal_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-batal_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - batal-network
    restart: unless-stopped

  # MinIO File Storage
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - batal-network
    restart: unless-stopped

  # Spring Boot Backend
  backend:
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/batal_db
      SPRING_DATASOURCE_USERNAME: batal_user
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-batal_password}
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      JWT_SECRET: ${JWT_SECRET:-default-jwt-secret-change-in-production}
    depends_on:
      - postgres
      - minio
    networks:
      - batal-network
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    environment:
      NODE_ENV: production
    depends_on:
      - backend
    networks:
      - batal-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  batal-network:
    driver: bridge
