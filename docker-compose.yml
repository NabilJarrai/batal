version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: batal-postgres
    environment:
      POSTGRES_DB: batal_db
      POSTGRES_USER: batal_user
      POSTGRES_PASSWORD: batal_password
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - batal-network

  # MinIO File Storage
  minio:
    image: minio/minio:latest
    container_name: batal-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - batal-network

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: batal-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/batal_db
      SPRING_DATASOURCE_USERNAME: batal_user
      SPRING_DATASOURCE_PASSWORD: batal_password
      MINIO_ENDPOINT: http://minio:9000
      SPRING_PROFILES_ACTIVE: prod
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      - postgres
      - minio
    networks:
      - batal-network
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: batal-frontend
    environment:
      NEXT_PUBLIC_API_URL: https://batal.nabiljarrai.com/api
      NODE_ENV: production
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - backend
    networks:
      - batal-network
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:

networks:
  batal-network:
    driver: bridge
