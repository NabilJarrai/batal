services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: batal-postgres-dev
    environment:
      POSTGRES_DB: batal_db
      POSTGRES_USER: batal_user
      POSTGRES_PASSWORD: batal_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - batal-network-dev

  # MinIO File Storage
  minio:
    image: minio/minio:latest
    container_name: batal-minio-dev
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data_dev:/data
    command: server /data --console-address ":9001"
    networks:
      - batal-network-dev

  # Spring Boot Backend (Development mode)
  backend:
    image: openjdk:17-jdk-slim
    container_name: batal-backend-dev
    working_dir: /app
    volumes:
      - ./backend:/app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/batal_db
      SPRING_DATASOURCE_USERNAME: batal_user
      SPRING_DATASOURCE_PASSWORD: batal_password
      MINIO_ENDPOINT: http://minio:9000
      SPRING_PROFILES_ACTIVE: dev
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - minio
    networks:
      - batal-network-dev
    command: >
      bash -c "
        chmod +x ./mvnw &&
        ./mvnw clean compile &&
        ./mvnw spring-boot:run
      "
    restart: unless-stopped

  # Next.js Frontend (Development mode)
  frontend:
    image: node:18-alpine
    container_name: batal-frontend-dev
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - batal-network-dev
    command: >
      sh -c "
        npm install &&
        npm run dev
      "
    restart: unless-stopped

volumes:
  postgres_data_dev:
  minio_data_dev:

networks:
  batal-network-dev:
    driver: bridge
